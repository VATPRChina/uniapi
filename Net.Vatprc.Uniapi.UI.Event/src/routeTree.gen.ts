/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FlightsCallsignImport } from './routes/flights/$callsign'
import { Route as EventsEventidImport } from './routes/events/$event_id'
import { Route as AuthCallbackImport } from './routes/auth/callback'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const FlightsIndexLazyImport = createFileRoute('/flights/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const FlightsIndexLazyRoute = FlightsIndexLazyImport.update({
  id: '/flights/',
  path: '/flights/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/flights/index.lazy').then((d) => d.Route))

const FlightsCallsignRoute = FlightsCallsignImport.update({
  id: '/flights/$callsign',
  path: '/flights/$callsign',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventidRoute = EventsEventidImport.update({
  id: '/events/$event_id',
  path: '/events/$event_id',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/events/$event_id': {
      id: '/events/$event_id'
      path: '/events/$event_id'
      fullPath: '/events/$event_id'
      preLoaderRoute: typeof EventsEventidImport
      parentRoute: typeof rootRoute
    }
    '/flights/$callsign': {
      id: '/flights/$callsign'
      path: '/flights/$callsign'
      fullPath: '/flights/$callsign'
      preLoaderRoute: typeof FlightsCallsignImport
      parentRoute: typeof rootRoute
    }
    '/flights/': {
      id: '/flights/'
      path: '/flights'
      fullPath: '/flights'
      preLoaderRoute: typeof FlightsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/events/$event_id': typeof EventsEventidRoute
  '/flights/$callsign': typeof FlightsCallsignRoute
  '/flights': typeof FlightsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/events/$event_id': typeof EventsEventidRoute
  '/flights/$callsign': typeof FlightsCallsignRoute
  '/flights': typeof FlightsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/events/$event_id': typeof EventsEventidRoute
  '/flights/$callsign': typeof FlightsCallsignRoute
  '/flights/': typeof FlightsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/callback'
    | '/events/$event_id'
    | '/flights/$callsign'
    | '/flights'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/callback'
    | '/events/$event_id'
    | '/flights/$callsign'
    | '/flights'
  id:
    | '__root__'
    | '/'
    | '/auth/callback'
    | '/events/$event_id'
    | '/flights/$callsign'
    | '/flights/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  EventsEventidRoute: typeof EventsEventidRoute
  FlightsCallsignRoute: typeof FlightsCallsignRoute
  FlightsIndexLazyRoute: typeof FlightsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  EventsEventidRoute: EventsEventidRoute,
  FlightsCallsignRoute: FlightsCallsignRoute,
  FlightsIndexLazyRoute: FlightsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/callback",
        "/events/$event_id",
        "/flights/$callsign",
        "/flights/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth/callback": {
      "filePath": "auth/callback.tsx"
    },
    "/events/$event_id": {
      "filePath": "events/$event_id.tsx"
    },
    "/flights/$callsign": {
      "filePath": "flights/$callsign.tsx"
    },
    "/flights/": {
      "filePath": "flights/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
